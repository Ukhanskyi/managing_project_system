---
openapi: 3.0.1
info:
  title: Codica managing project system API V1
  version: v1
paths:
  "/api/v1/current_users":
    get:
      summary: Returns authorized current user
      tags:
      - Current User
      security:
      - jwt: []
      responses:
        '200':
          description: successful
  "/api/v1/projects":
    get:
      summary: Returns Projects index page
      tags:
      - Projects
      security:
      - jwt: []
      responses:
        '200':
          description: successful
    post:
      summary: Creates a new project
      tags:
      - Projects
      security:
      - jwt: []
      parameters: []
      responses:
        '201':
          description: project created
        '422':
          description: unprocessable entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                project:
                  type: object
                  properties:
                    name:
                      type: string
                    description:
                      type: string
                    user_id:
                      type: integer
                  required:
                  - name
                  - description
                  - user_id
              required:
              - project
  "/api/v1/projects/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Find project by ID
      tags:
      - Projects
      security:
      - jwt: []
      responses:
        '200':
          description: successful
        '404':
          description: not found
    patch:
      summary: Update existing project partially
      tags:
      - Projects
      security:
      - jwt: []
      parameters: []
      responses:
        '200':
          description: successful
        '422':
          description: unprocessable entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                project:
                  type: object
                  properties:
                    name:
                      type: string
                    description:
                      type: string
                    user_id:
                      type: integer
                  required:
                  - name
                  - description
                  - user_id
              required:
              - project
    put:
      summary: Update an existing project or create new if project doesn`t exist
      tags:
      - Projects
      security:
      - jwt: []
      parameters: []
      responses:
        '200':
          description: successful
        '422':
          description: unprocessable entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                project:
                  type: object
                  properties:
                    name:
                      type: string
                    description:
                      type: string
                    user_id:
                      type: integer
                  required:
                  - name
                  - description
                  - user_id
              required:
              - project
    delete:
      summary: Delete a project
      tags:
      - Projects
      security:
      - jwt: []
      responses:
        '204':
          description: successful
        '404':
          description: not found
  "/api/v1/tasks":
    get:
      summary: Returns Tasks index page
      tags:
      - Tasks
      security:
      - jwt: []
      responses:
        '200':
          description: successful
    post:
      summary: Creates a new task
      tags:
      - Tasks
      security:
      - jwt: []
      parameters: []
      responses:
        '201':
          description: task created
        '422':
          description: unprocessable entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                task:
                  type: object
                  properties:
                    name:
                      type: string
                    description:
                      type: string
                    status:
                      type: integer
                      enum:
                      - to_do
                      - in_progress
                      - completed
                    project_id:
                      type: integer
                  required:
                  - name
                  - description
                  - status
                  - project_id
              required:
              - task
  "/api/v1/tasks/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: Find task by ID
      tags:
      - Tasks
      security:
      - jwt: []
      responses:
        '200':
          description: successful
        '404':
          description: not found
    patch:
      summary: Update existing task partially
      tags:
      - Tasks
      security:
      - jwt: []
      parameters: []
      responses:
        '200':
          description: successful
        '422':
          description: unprocessable entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                task:
                  type: object
                  properties:
                    name:
                      type: string
                    description:
                      type: string
                    status:
                      type: integer
                      enum:
                      - to_do
                      - in_progress
                      - completed
                    project_id:
                      type: integer
                  required:
                  - name
                  - description
                  - status
                  - project_id
              required:
              - task
    put:
      summary: Update an existing task or create new if task doesn`t exist
      tags:
      - Tasks
      security:
      - jwt: []
      parameters: []
      responses:
        '200':
          description: successful
        '422':
          description: unprocessable entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                task:
                  type: object
                  properties:
                    name:
                      type: string
                    description:
                      type: string
                    status:
                      type: integer
                      enum:
                      - to_do
                      - in_progress
                      - completed
                    project_id:
                      type: integer
                  required:
                  - name
                  - description
                  - status
                  - project_id
              required:
              - task
    delete:
      summary: Delete a task
      tags:
      - Tasks
      security:
      - jwt: []
      responses:
        '204':
          description: successful
        '404':
          description: not found
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000
components:
  securitySchemes:
    jwt:
      type: apiKey
      name: Authorization
      in: header
